<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="Image1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMIAAACqCAMAAADImGA0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFAAAAgICA
        gAAAgIAAAIAAAICAAACAgACAgIBAAEBAAID/AECAQAD/gEAA////wMDA/wAA//8AAP8AAP//AAD//wD/
        //+AAP+AgP//gID//wCA/4BA7u7u3d3dzMzMu7u7qqqqmZmZiIiId3d3ZmZmVVVVREREMzMzIiIiERER
        ///M//+Z//9m//8z/8z//8zM/8yZ/8xm/8wz/8wA/5n//5nM/5mZ/5lm/5kz/5kA/2b//2bM/2aZ/2Zm
        /2Yz/2YA/zP//zPM/zOZ/zNm/zMz/zMA/wDM/wCZ/wBm/wAzzP//zP/MzP+ZzP9mzP8zzP8AzMz/zMyZ
        zMxmzMwzzMwAzJn/zJnMzJmZzJlmzJkzzJkAzGb/zGbMzGaZzGZmzGYzzGYAzDP/zDPMzDOZzDNmzDMz
        zDMAzAD/zADMzACZzABmzAAzzAAAmf//mf/Mmf+Zmf9mmf8zmf8Amcz/mczMmcyZmcxmmcwzmcwAmZn/
        mZnMmZlmmZkzmZkAmWb/mWbMmWaZmWZmmWYzmWYAmTP/mTPMmTOZmTNmmTMzmTMAmQD/mQDMmQCZmQBm
        mQAzmQAAZv//Zv/MZv+ZZv9mZv8zZv8AZsz/ZszMZsyZZsxmZswzZswAZpn/ZpnMZpmZZplmZpkzZpkA
        Zmb/ZmbMZmaZZmYzZmYAZjP/ZjPMZjOZZjNmZjMzZjMAZgD/ZgDMZgCZZgBmZgAzZgAAM///M//MM/+Z
        M/9mM/8zM/8AM8z/M8zMM8yZM8xmM8wzM8wAM5n/M5nMM5mZM5lmM5kzM5kAM2b/M2bMM2aZM2ZmM2Yz
        M2YAMzP/MzPMMzOZMzNmMzMAMwD/MwDMMwCZMwBmMwAzMwAAAP/MAP+ZAP9mAP8zAMz/AMzMAMyZAMxm
        AMwzAMwAAJn/AJnMAJmZAJlmAJkzAJkAAGb/AGbMAGaZAGZmAGYzAGYAADP/ADPMADOZADNmADMzADMA
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="imgLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAMAAAAL34HQAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwBQTFRFAAAAAgIC
        BQUFDAwMDQ0NGhoaJCQkLCwsLy8vAEBAYVpa/wAA//8AgIBAgICAwMDAwcHB////AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
  <data name="ProgressBar1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAeAAAAAIB
        AAAAAQAAAAAXAAAAIHFoaiBadHVRaGE7amRmbltpYWV0ciAAAAAATAAAACFDNBIIAAAAtjEAAD0EAACE
        fuHmAgAFABwAAAAAAAAAAAAgQQHvzasAAAUAwVtPdx4DEHn//////////wAAAAAf3uy9AQAFAAAAAAAL
</value>
  </data>
</root>